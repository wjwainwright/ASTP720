\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Fitting the data without any given uncertainty in 2D, ignoring the $\frac  {Fe}{H}$ axis that is used to get the fit for $\gamma $.\relax }}{1}{figure.caption.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Fitting the data with an uncertainty of $\sigma =0.1mag$. Notice that the fit parameters do not change but the uncertainty in the fit does change.\relax }}{2}{figure.caption.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Comparison of my fit to that of scipy's curve fitting method. The fact that both return the same fit parameters gives me confidence in my fit.\relax }}{2}{figure.caption.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces 3D plot of the parameter space with the best fit represented as a plane. Note that I could only figure out how to fit the plane to one of the three dimensions, so it is not fit to the extra axis compared to the 2D fit, but rather the 2D line fit extended into a third dimension.\relax }}{3}{figure.caption.5}}
